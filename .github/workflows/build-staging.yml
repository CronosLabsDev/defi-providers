name: Build image (staging)

on:
  push:
    branches:
      - k8s_poc # TODO: change after testing
  workflow_dispatch:

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

env:
  ECR_REPOSITORY_NAME_APP: defi-providers
  ECR_REPOSITORY_NAME_INFRA: defi-providers-infra
  AWS_DEFAULT_REGION: eu-central-1
  AWS_IAM_ROLE_GITHUB: "${{ secrets.AWS_IAM_ROLE_GITHUB }}"

jobs:
  build:
    name: Build and push image
    runs-on: dappradar-runner

    steps:
    - uses: actions/checkout@v3

    - name: Construct tag variable
      run: |
        TIMESTAMP=$(date +'%Y%m%d%H%M%S')
        IMAGE_TAG=staging-${GITHUB_SHA}-$TIMESTAMP
        echo $IMAGE_TAG
        echo "TIMESTAMP=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-region: ${{ env.AWS_DEFAULT_REGION }}
        role-to-assume: ${{ env.AWS_IAM_ROLE_GITHUB }}

    - name: Authenticate to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        driver: docker

    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        tags: "${{ secrets.IMAGE_REGISTRY_URL }}/${{ env.ECR_REPOSITORY_NAME_APP }}:staging-${{ github.sha }}-${{ env.TIMESTAMP }}"
        push: false

    - name: Scan image - High and Critical Severity
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: "${{ secrets.IMAGE_REGISTRY_URL }}/${{ env.ECR_REPOSITORY_NAME_APP }}:staging-${{ github.sha }}-${{ env.TIMESTAMP }}"        
        format: sarif
        output: trivy-results.sarif
        exit-code: 1

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: trivy-results.sarif

    - name: Push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        tags: "${{ secrets.IMAGE_REGISTRY_URL }}/${{ env.ECR_REPOSITORY_NAME_APP }}:staging-${{ github.sha }}-${{ env.TIMESTAMP }}"
        push: true

    - name: Bake and push manifests
      run: |
        echo "TODO"
